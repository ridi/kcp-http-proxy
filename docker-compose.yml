version: '3'

services:
  redis:
    container_name: kcp-http-proxy-redis
    image: redis:latest
    command: ['redis-server']

  dynamodb:
    container_name: kcp-http-proxy-db
    image: amazon/dynamodb-local
    working_dir: /home/dynamodblocal
    command: ['-jar', 'DynamoDBLocal.jar', '-sharedDb', '-dbPath', '.']

  application:
    container_name: kcp-http-proxy
    image: node:lts
    volumes:
      - ./:/app
    working_dir: /app
    ports:
      - 80
    environment:
      APP_ENV: dev
      PORT: 80
      KCP_SITE_CODE: test
      KCP_SITE_KEY: test
      KCP_GROUP_ID: test
      KCP_TAX_DEDUCTION_SITE_CODE: test
      KCP_TAX_DEDUCTION_SITE_KEY: test
      KCP_TAX_DEDUCTION_GROUP_ID: test        
      SENTRY_DSN: your_sentry_dsn
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: ap-northeast-2      
      AWS_DYNAMO_DB_ENDPOINT: http://dynamodb:8000
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - dynamodb
    command: >
      bash -c 'npm i pm2 -g &&
               npm install &&
               npm run build &&
               npm start'
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${EXTERNAL_NETWORK:-ridi}"
      - "traefik.frontend.rule=Host:kcp.local.ridi.io"
    networks:
      traefik:
        aliases:
          - kcp
      default:
networks:
  traefik:
    external:
      name: ${EXTERNAL_NETWORK:-ridi}
