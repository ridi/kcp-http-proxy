language: node_js
node_js:
  - "stable"

sudo: required

install:
  - npm ci

cache:
  directories:
    - "$HOME/.npm"

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

stages:
  - test
  - build
  - deploy

jobs:
  include:
    - stage: test
      name: test
      if: tag IS NOT present
      script:
        - make test
      after_success:
        - bash <(curl -s https://codecov.io/bash) -f "$(pwd)/coverage/coverage-final.json"  
    - stage: build
      name: build
      if: branch IN (test, staging, master)
      install:
        - sudo apt-get install python3-pip 
        - sudo pip3 install awscli
      script:
        - $(aws ecr get-login --no-include-email --region ap-northeast-2)
        - TAG=$TRAVIS_COMMIT make build
        - docker push 023315198496.dkr.ecr.ap-northeast-2.amazonaws.com/ridi/kcp-http-proxy:$TRAVIS_COMMIT
      after_success:
        - if [ "$TRAVIS_BRANCH" = "master" ]; then TAG=latest make build && docker push 023315198496.dkr.ecr.ap-northeast-2.amazonaws.com/ridi/kcp-http-proxy:latest; fi
    - stage: deploy
      name: prod-deploy
      if: tag IS present AND tag =~ ^v
      install: sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest && sudo chmod +x /usr/local/bin/ecs-cli
      script:
          APP_ENV=prod \
          GIT_REVISION=$TRAVIS_COMMIT \
          AP_NORTHEAST_2A_PRIVATE_SUBNET_ID=$PROD_AP_NORTHEAST_2A_PRIVATE_SUBNET_ID \
          AP_NORTHEAST_2C_PRIVATE_SUBNET_ID=$PROD_AP_NORTHEAST_2C_PRIVATE_SUBNET_ID \
          SECURITY_GROUP_ID=$PROD_SECURITY_GROUP_ID make deploy
      after_success:
        - sh ./bin/slack_notification.sh success
      after_failure:
        - sh ./bin/slack_notification.sh fail
    - stage: deploy
      name: test-deploy
      if: branch = test
      install: sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest && sudo chmod +x /usr/local/bin/ecs-cli
      script:
        - |
          APP_ENV=test \
          GIT_REVISION=$TRAVIS_COMMIT \
          AP_NORTHEAST_2A_PRIVATE_SUBNET_ID=$TEST_AP_NORTHEAST_2A_PRIVATE_SUBNET_ID \
          AP_NORTHEAST_2C_PRIVATE_SUBNET_ID=$TEST_AP_NORTHEAST_2C_PRIVATE_SUBNET_ID \
          SECURITY_GROUP_ID=$TEST_SECURITY_GROUP_ID make deploy
    - stage: deploy
      name: staging-deploy
      if: branch = staging
      install: sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest && sudo chmod +x /usr/local/bin/ecs-cli
      script:
        - |
          APP_ENV=staging \
          GIT_REVISION=$TRAVIS_COMMIT \
          AP_NORTHEAST_2A_PRIVATE_SUBNET_ID=$STAGING_AP_NORTHEAST_2A_PRIVATE_SUBNET_ID \
          AP_NORTHEAST_2C_PRIVATE_SUBNET_ID=$STAGING_AP_NORTHEAST_2C_PRIVATE_SUBNET_ID \
          SECURITY_GROUP_ID=$STAGING_SECURITY_GROUP_ID make deploy
